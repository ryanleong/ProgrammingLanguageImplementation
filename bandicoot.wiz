proc search (val float k)
    # try find k in this array.

    float array[1..10];
    int num;
    bool find;
    
    num := 1;
    find := false;
    while num <= 10 do
        array[num] := num;
        num := num +1;
    od
    
    while num >= 0 do
        if k = array[num] then
            write "find!";
            find := true;
        fi
        num := num -1;
    od
    if not find then
        write "not find!";
    fi
end

proc testSearch()
    # let's test it
    int x;
    int y;
    int z;

    z := (x + y * x) - (y - x)/1;
    search(z);
end

proc doNothing()
    int zero;

    zero := 0;
    write "\"This prints something irrelevant\"";
    write "\n";
    while zero >= 0 do
        write "Don't think you should be seeing this";
    od  

end

proc equallyUseless()
    float total;
    int new[1..5];

    total := 0;
    new[1] := 1;
    while total < 10 do
        total := total + new[1];
        doNothing();
    od
end

proc main()
    int m;
    int e;
    float g;
    bool a[4..6];
    
    while m < 9 do
        e := 5;
        g := m + e + 4.5;

        if g < 10.6 then
            g := 2.3; 
        fi else
            g := 4 + m;
            a[5] := true; 
        fi
        m := m + 1;
    od
end

proc printer(ref int m, val float g)
    float k;
    float range[0..10];
    int i;

    i := 0;
    k := (m * g)/42.5;

    while i < 11 do
        k := (k*2)/i;
        i := i+1;
    od
end
